
# Special UDP syslog forwarding output relayed with the origin log source IP address spoofed (if enabled, else blank)


# Useful with downstream systems that don't process the syslog header and assume the network source IP is the original host.

Module (
  load="omudpspoof"
)

# Dynamic stats for output
dyn_stats(name="msg_per_fromhost_omudpspoof_syslog_post_filter" resettable="on" maxCardinality="10000" unusedMetricLife="86400" )

ruleset(name="fwd_syslog_udp_spoof")
{
  $IncludeConfig /etc/rsyslog.d/output/filters/fwd_syslog/*.conf

  set $.inc_status = dyn_inc("msg_per_fromhost_omudpspoof_syslog_post_filter", $fromhost);
  if ($.inc_status != 0) then {
    action(name="dyn_stat_inc_error" type="omfile" file="/var/log/impstats/dyn_stats_inc_error.log" template="DynStatsError")
  }

  action(
    name="fwd_syslog_target_test_syslog_relay_udp_spoof"
    type="omudpspoof"
    Target="test_syslog_relay_udp_spoof"
    Port="10514"
    template="TmplRFC5424Meta"
    action.resumeRetryCount = "-1"
    # queue config 
    queue.type="LinkedList"
    queue.filename="fwd_syslog_omudpspoof"
    # queue peristance and size limit
    queue.maxDiskSpace="1073741824"
    queue.size="500000"
    queue.discardMark="475000"
    queue.discardSeverity="7"
    queue.checkpointInterval="5000"
    queue.saveOnShutdown="on"
    # queue threads and batching
    queue.dequeueBatchSize="1000"
    queue.minDequeueBatchSize="50"
    queue.minDequeueBatchSize.timeout="250"
    queue.workerThreads="8"
    queue.workerThreadMinimumMessages="5000"
  )
}
