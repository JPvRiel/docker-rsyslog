
# Special UDP syslog forwarding output relayed with the origin log source IP address spoofed (if enabled, else blank)


# Useful with downstream systems that don't process the syslog header and assume the network source IP is the original host.

Module (
  load="omudpspoof"
)

# Dynamic stats for output
dyn_stats(name="msg_per_fromhost_omudpspoof_syslog_post_filter" resettable="on" maxCardinality="10000" unusedMetricLife="86400" )

ruleset(name="fwd_syslog_udp_spoof")
{
  $IncludeConfig /etc/rsyslog.d/output/filters/fwd_syslog/*.conf

  set $.inc_status = dyn_inc("msg_per_fromhost_omudpspoof_syslog_post_filter", $fromhost);
  # TODO - improve action when increment failed, e.g. cumbersome but would show up in impstats action counts at least to know there is an issue
  if ($.inc_status != 0) then {
    action(name="dyn_stat_inc_error" type="omfile" file="/dev/null" template="Empty")
  }

  action(
    name="fwd_syslog_target_test_syslog_relay_udp_spoof"
    type="omudpspoof"
    Target="test_syslog_relay_udp_spoof"
    Port="10514"
    template="TmplRFC5424Meta"
    action.resumeRetryCount = "-1"
    # queue config 
    queue.type="LinkedList"
    queue.filename="fwd_syslog_omudpspoof"
    # queue peristance and size limit
    queue.maxDiskSpace="1073741824"
    queue.size="1048576"
    queue.discardMark="838860"
    queue.discardSeverity="6"
    queue.checkpointInterval="8192"
    queue.saveOnShutdown="on"
    # queue threads and batching
    queue.dequeueBatchSize="1024"
    queue.minDequeueBatchSize="128"
    queue.minDequeueBatchSize.timeout="500"
    queue.workerThreads="4"
    queue.workerThreadMinimumMessages="8192"
  )
}
