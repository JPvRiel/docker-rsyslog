{{ $rsyslog_impstats := getenv "rsyslog_impstats" | toLower | eq "on" "true" -}}
{{ $rsyslog_impstats_log_file_enabled := getenv "rsyslog_impstats_log_file_enabled" | toLower | eq "on" "true" -}}
{{ $rsyslog_impstats_log_file := getenv "rsyslog_impstats_log_file" -}}
{{ $empty_string := "" }}
{{ if $rsyslog_impstats -}}
# Collect stats - rsyslog docs warn to load this module first before others (but might only be applicable to legacy config)
module(
  load="impstats"
  interval="{{ getenv "rsyslog_module_impstats_interval" }}"
  resetCounters="{{ getenv "rsyslog_module_impstats_resetCounters" }}"
  Format="{{ getenv "rsyslog_module_impstats_format" }}"
  log.syslog="{{ getenv "rsyslog_impstats_log_syslog" }}"
  {{ if and $rsyslog_impstats_log_file_enabled (ne $rsyslog_impstats_log_file "") -}}
  log.file="{{ $rsyslog_impstats_log_file }}"
  {{- end }}
  ruleset="{{ getenv "rsyslog_impstats_ruleset" }}"
)
{{- end }}

# Load extra parser modules which the peoples might want to use in the parser chain - will waste a bit of memory, but keeps logic simpler
module(load="pmlastmsg")
module(load="pmaixforwardedfrom")
module(load="pmciscoios")
module(load="pmnull")

{{ $rsyslog_mmjsonparse := getenv "rsyslog_mmjsonparse" | toLower | eq "on" "true" -}}
{{ if $rsyslog_mmjsonparse -}}
module(load="mmjsonparse")
{{- end }}
{{ $rsyslog_mmpstrucdata := getenv "rsyslog_mmpstrucdata" | toLower | eq "on" "true" -}}
{{ if $rsyslog_mmpstrucdata -}}
# Parse RFCR424 structured data
module(load="mmpstrucdata")
{{- end }}

# Globals
global(
  parser.permitSlashInProgramName="{{ getenv "rsyslog_global_parser_permitSlashInProgramName" }}"
  parser.escapeControlCharacterTab="{{ getenv "rsyslog_global_parser_escapeControlCharacterTab" }}"
  preserveFQDN="{{ getenv "rsyslog_global_preserveFQDN" }}"
  maxMessageSize="{{ getenv "rsyslog_global_maxMessageSize" }}"
  action.reportSuspension="{{ getenv "rsyslog_global_action_reportSuspension" }}"
  senders.keepTrack="{{ getenv "rsyslog_global_senders_keepTrack" }}"
  senders.timeoutAfter="{{ getenv "rsyslog_global_senders_timeoutAfter" }}"
  senders.reportGoneAway="{{ getenv "rsyslog_global_senders_reportGoneAway" }}"
  shutdown.enable.ctlc="on"
  processInternalMessages="on"
)
